generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RequirementStatus {
  OPEN
  CLOSED
  IN_PROGRESS
}

model User {
  id        String    @id @default(uuid()) // Supabase 默认使用 uuid
  email     String    @unique
  username  String    @unique
  password  String
  avatar    String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  requirements Requirement[]
  comments     Comment[]
  likes        Like[]

  @@map("users") // 表名使用复数
}

model Requirement {
  id          String            @id @default(uuid())
  title       String
  description String
  budget      Decimal?          @db.Decimal(10, 2) // 使用 Decimal 避免精度问题
  deadline    DateTime?
  status      RequirementStatus @default(OPEN)
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")

  userId      String          @map("user_id")
  user       User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments   Comment[]
  likes      Like[]
  tags       Tag[]

  @@map("requirements") // 表名使用复数
}

model Comment {
  id        String    @id @default(uuid())
  content   String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  userId        String      @map("user_id")
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  requirementId String      @map("requirement_id")
  requirement   Requirement @relation(fields: [requirementId], references: [id], onDelete: Cascade)

  @@map("comments") // 表名使用复数
}

model Like {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now()) @map("created_at")

  userId        String      @map("user_id")
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  requirementId String      @map("requirement_id")
  requirement   Requirement @relation(fields: [requirementId], references: [id], onDelete: Cascade)

  @@unique([userId, requirementId])
  @@map("likes") // 表名使用复数
}

model Tag {
  id        String    @id @default(uuid())
  name      String    @unique @db.VarChar(255) // 限制长度
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  requirements Requirement[]

  @@map("tags") // 表名使用复数
}